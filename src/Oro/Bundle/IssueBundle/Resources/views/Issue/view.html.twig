{% extends 'OroUIBundle:actions:view.html.twig' %}
{% import 'OroUIBundle::macros.html.twig' as UI %}
{% import 'OroDataGridBundle::macros.html.twig' as dataGrid %}
{% import 'OroUserBundle::macros.html.twig' as U %}
{% import 'OroEntityConfigBundle::macros.html.twig' as entityConfig %}


{% block navButtons %}
    {% if resource_granted('EDIT', entity) %}
        {{ UI.editButton({
            'path' : path('issue_update', { id: entity.id }),
            'entity_label': 'oro.issue.entity_label'|trans
        }) }}
    {% endif %}

    {% if resource_granted('DELETE', entity) %}
        {{ UI.deleteButton({
            'dataUrl': path('oro_api_delete_issue', {'id': entity.id}),
            'dataRedirect': path('issue_index'),
            'aCss': 'no-hash remove-button',
            'id': 'btn-remove-issue',
            'dataId': entity.id,
            'entity_label': 'oro.issue.import_label'|trans,
        }) }}
    {% endif %}
    {% if resource_granted('EDIT', entity) and entity.issueType == 'Story' %}
        {{ UI.button({
            'path' : path('issue_create', { parent: entity.id }),
            'label': 'Subtask'|trans
        }) }}
    {% endif %}
{% endblock navButtons %}

{% block pageHeader %}
    {% set breadcrumbs = {
    'entity':      entity,
    'indexPath':   path('issue_index'),
    'indexLabel': 'oro.issue.entity_label'|trans,
    'entityTitle': entity.summary
    } %}
    {{ parent() }}
{% endblock pageHeader %}

{% block content_data %}
    {% set data %}
        <div class="widget-content">
            <div class="row-fluid form-horizontal">
                <div class="responsive-block">
                    {{ UI.renderProperty('oro.issue.summary.label'|trans, entity.summary) }}
                    {{ UI.renderProperty('oro.issue.code.label'|trans, entity.code) }}
                    {{ UI.renderProperty('oro.issue.issue_type.label'|trans,
                                        ('oro.issue.form.issue_type.' ~  entity.issueType ~ '.label') | trans()) }}
                    {{ UI.renderProperty('oro.issue.issue_priority.label'|trans, entity.issuePriority) }}
                    {{ UI.renderProperty('oro.issue.issue_resolution.label'|trans, entity.issueResolution) }}
                    {{ UI.renderProperty('oro.issue.description.label'|trans, entity.description) }}
                    {{ UI.renderProperty('oro.issue.reporter.label'|trans, entity.reporter) }}
                    {{ UI.renderProperty('oro.issue.assignee.label'|trans, entity.assignee) }}
                    {{ UI.renderProperty('oro.ui.created_at'|trans, entity.createdAt|oro_format_datetime) }}
                    {{ UI.renderProperty('oro.ui.updated_at'|trans, entity.updatedAt|oro_format_datetime) }}
                    {% if entity.parent is not empty %}
                        <a href="{{ path('issue_view', {'id': entity.parent.id}) }}">{{ UI.renderProperty('Parent'|trans, entity.parent.code) }}</a>
                    {% endif %}
                </div>
                <div class="responsive-block">
                    {{ entityConfig.renderDynamicFields(entity) }}
                </div>
            </div>
        </div>
    {% endset %}
    {% set dataBlocks = [
    {
    'title': 'Data'|trans,
    'class': 'active',
    'subblocks': [
    { 'data' : [data] }
    ]
    }
    ] %}

    {% if entity.relatedIssues is not null %}
        {% set dataBlocks = dataBlocks|merge([{
        'title': 'oro.issue.related_issues.label'|trans,
        'subblocks': [{
        'title': '',
        'useSpan': false,
        'data' : [
        dataGrid.renderGrid('related-issues-grid', {'ids': entity.relatedIssues})
        ]
        }]
        }] ) %}
    {% endif %}
    {% if entity.collaborators is not null %}
        {% set dataBlocks = dataBlocks|merge([{
        'title': 'oro.issue.collaborators.label'|trans,
        'subblocks': [{
        'title': '',
        'useSpan': false,
        'data' : [
        dataGrid.renderGrid('collaborator-grid', {'ids': entity.collaborators})
        ]
        }]
        }] ) %}
    {% endif %}
    {% if entity.issueType == 'Story' %}
        {% set dataBlocks = dataBlocks|merge([{
        'title': 'oro.issue.children.label'|trans,
        'subblocks': [{
        'title': '',
        'useSpan': false,
        'data' : [
        dataGrid.renderGrid('subtask-grid', {'parent_id': entity.id})
        ]
        }]
        }] ) %}
    {% endif %}

    {% set id = 'issueView' %}
    {% set data = { 'dataBlocks': dataBlocks } %}
    {{ parent() }}
{% endblock content_data %}